{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shres\\\\krishi-suvidha\\\\src\\\\components\\\\SoilHealth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SoilHealth({\n  userLocation,\n  setUserLocation\n}) {\n  _s();\n  const [cropType, setCropType] = useState(\"\");\n  const [soilData, setSoilData] = useState({\n    pH: \"\",\n    nitrogen: \"\",\n    phosphorus: \"\",\n    potassium: \"\"\n  });\n  const [results, setResults] = useState(null);\n  const handleInputChange = (field, value) => {\n    setSoilData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const analyzeSoil = () => {\n    const analysis = {\n      pH: parseFloat(soilData.pH) || 0,\n      nitrogen: soilData.nitrogen,\n      phosphorus: soilData.phosphorus,\n      potassium: soilData.potassium\n    };\n    let recommendations = [];\n    if (analysis.pH < 6.0) {\n      recommendations.push(\"Soil is acidic. Apply lime at 2 tons per acre.\");\n    } else if (analysis.pH > 7.5) {\n      recommendations.push(\"Soil is alkaline. Add organic matter and sulfur.\");\n    } else {\n      recommendations.push(\"Soil pH is optimal for most crops.\");\n    }\n    if (analysis.nitrogen === \"low\") {\n      recommendations.push(\"Apply nitrogen-rich fertilizer (Urea: 50kg/acre)\");\n    }\n    if (analysis.phosphorus === \"low\") {\n      recommendations.push(\"Apply phosphorus-rich fertilizer (DAP: 50kg/acre)\");\n    }\n    if (analysis.potassium === \"low\") {\n      recommendations.push(\"Apply potassium-rich fertilizer (MOP: 25kg/acre)\");\n    }\n    setResults({\n      analysis,\n      recommendations,\n      soilHealth: analysis.pH >= 6.0 && analysis.pH <= 7.5 ? \"Good\" : \"Needs Improvement\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Soil Health Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Farm Location\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userLocation,\n          onChange: e => setUserLocation(e.target.value),\n          placeholder: \"Enter your farm location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current Crop\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: cropType,\n          onChange: e => setCropType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"wheat\",\n            children: \"Wheat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rice\",\n            children: \"Rice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"corn\",\n            children: \"Corn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"vegetables\",\n            children: \"Vegetables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Soil Test Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"pH Level\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.1\",\n          value: soilData.pH,\n          onChange: e => handleInputChange(\"pH\", e.target.value),\n          placeholder: \"Enter pH value (0-14)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Nitrogen Level\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: soilData.nitrogen,\n          onChange: e => handleInputChange(\"nitrogen\", e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"high\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phosphorus Level\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: soilData.phosphorus,\n          onChange: e => handleInputChange(\"phosphorus\", e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"high\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Potassium Level\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: soilData.potassium,\n          onChange: e => handleInputChange(\"potassium\", e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"high\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: analyzeSoil,\n        disabled: !userLocation || !cropType,\n        children: \"Analyze Soil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Soil Analysis Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n            gap: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"pH Level:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 20\n            }, this), \" \", results.analysis.pH]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nitrogen:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 20\n            }, this), \" \", results.analysis.nitrogen]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Phosphorus:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 20\n            }, this), \" \", results.analysis.phosphorus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Potassium:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 20\n            }, this), \" \", results.analysis.potassium]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Overall Health:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 20\n            }, this), \" \", results.soilHealth]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card success\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: results.recommendations.map((rec, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"\\u2713 \", rec]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(SoilHealth, \"Xm1eGlFRKmPVWEdS6r7eb4mGhHY=\");\n_c = SoilHealth;\nvar _c;\n$RefreshReg$(_c, \"SoilHealth\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SoilHealth","userLocation","setUserLocation","_s","cropType","setCropType","soilData","setSoilData","pH","nitrogen","phosphorus","potassium","results","setResults","handleInputChange","field","value","prev","analyzeSoil","analysis","parseFloat","recommendations","push","soilHealth","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","e","target","placeholder","step","onClick","disabled","style","marginTop","display","gridTemplateColumns","gap","map","rec","index","_c","$RefreshReg$"],"sources":["C:/Users/shres/krishi-suvidha/src/components/SoilHealth.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function SoilHealth({ userLocation, setUserLocation }) {\r\n  const [cropType, setCropType] = useState(\"\");\r\n  const [soilData, setSoilData] = useState({\r\n    pH: \"\",\r\n    nitrogen: \"\",\r\n    phosphorus: \"\",\r\n    potassium: \"\"\r\n  });\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setSoilData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const analyzeSoil = () => {\r\n    const analysis = {\r\n      pH: parseFloat(soilData.pH) || 0,\r\n      nitrogen: soilData.nitrogen,\r\n      phosphorus: soilData.phosphorus,\r\n      potassium: soilData.potassium\r\n    };\r\n\r\n    let recommendations = [];\r\n    \r\n    if (analysis.pH < 6.0) {\r\n      recommendations.push(\"Soil is acidic. Apply lime at 2 tons per acre.\");\r\n    } else if (analysis.pH > 7.5) {\r\n      recommendations.push(\"Soil is alkaline. Add organic matter and sulfur.\");\r\n    } else {\r\n      recommendations.push(\"Soil pH is optimal for most crops.\");\r\n    }\r\n\r\n    if (analysis.nitrogen === \"low\") {\r\n      recommendations.push(\"Apply nitrogen-rich fertilizer (Urea: 50kg/acre)\");\r\n    }\r\n\r\n    if (analysis.phosphorus === \"low\") {\r\n      recommendations.push(\"Apply phosphorus-rich fertilizer (DAP: 50kg/acre)\");\r\n    }\r\n\r\n    if (analysis.potassium === \"low\") {\r\n      recommendations.push(\"Apply potassium-rich fertilizer (MOP: 25kg/acre)\");\r\n    }\r\n\r\n    setResults({\r\n      analysis,\r\n      recommendations,\r\n      soilHealth: analysis.pH >= 6.0 && analysis.pH <= 7.5 ? \"Good\" : \"Needs Improvement\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Soil Health Analysis</h2>\r\n      \r\n      <div className=\"card\">\r\n        <label>\r\n          Farm Location\r\n          <input \r\n            type=\"text\" \r\n            value={userLocation} \r\n            onChange={e => setUserLocation(e.target.value)} \r\n            placeholder=\"Enter your farm location\" \r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Current Crop\r\n          <select value={cropType} onChange={e => setCropType(e.target.value)}>\r\n            <option value=\"\">Select crop</option>\r\n            <option value=\"wheat\">Wheat</option>\r\n            <option value=\"rice\">Rice</option>\r\n            <option value=\"corn\">Corn</option>\r\n            <option value=\"vegetables\">Vegetables</option>\r\n          </select>\r\n        </label>\r\n\r\n        <h3>Soil Test Results</h3>\r\n        \r\n        <label>\r\n          pH Level\r\n          <input \r\n            type=\"number\" \r\n            step=\"0.1\"\r\n            value={soilData.pH}\r\n            onChange={e => handleInputChange(\"pH\", e.target.value)}\r\n            placeholder=\"Enter pH value (0-14)\"\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Nitrogen Level\r\n          <select value={soilData.nitrogen} onChange={e => handleInputChange(\"nitrogen\", e.target.value)}>\r\n            <option value=\"\">Select level</option>\r\n            <option value=\"low\">Low</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"high\">High</option>\r\n          </select>\r\n        </label>\r\n\r\n        <label>\r\n          Phosphorus Level\r\n          <select value={soilData.phosphorus} onChange={e => handleInputChange(\"phosphorus\", e.target.value)}>\r\n            <option value=\"\">Select level</option>\r\n            <option value=\"low\">Low</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"high\">High</option>\r\n          </select>\r\n        </label>\r\n\r\n        <label>\r\n          Potassium Level\r\n          <select value={soilData.potassium} onChange={e => handleInputChange(\"potassium\", e.target.value)}>\r\n            <option value=\"\">Select level</option>\r\n            <option value=\"low\">Low</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"high\">High</option>\r\n          </select>\r\n        </label>\r\n\r\n        <button onClick={analyzeSoil} disabled={!userLocation || !cropType}>\r\n          Analyze Soil\r\n        </button>\r\n      </div>\r\n\r\n      {results && (\r\n        <div style={{ marginTop: \"2rem\" }}>\r\n          <div className=\"card\">\r\n            <h3>Soil Analysis Results</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '1rem' }}>\r\n              <div><strong>pH Level:</strong> {results.analysis.pH}</div>\r\n              <div><strong>Nitrogen:</strong> {results.analysis.nitrogen}</div>\r\n              <div><strong>Phosphorus:</strong> {results.analysis.phosphorus}</div>\r\n              <div><strong>Potassium:</strong> {results.analysis.potassium}</div>\r\n              <div><strong>Overall Health:</strong> {results.soilHealth}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card success\">\r\n            <h3>Recommendations</h3>\r\n            <ul>\r\n              {results.recommendations.map((rec, index) => (\r\n                <li key={index}>✓ {rec}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}