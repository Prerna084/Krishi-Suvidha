{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shres\\\\krishi-suvidha\\\\src\\\\components\\\\SoilHealth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SoilHealth() {\n  _s();\n  const [soilData, setSoilData] = useState({\n    ph: '',\n    nitrogen: '',\n    phosphorus: '',\n    potassium: ''\n  });\n  const [recommendation, setRecommendation] = useState(null);\n  const handleChange = e => {\n    setSoilData({\n      ...soilData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Call backend API to get crop recommendation\n    const res = await fetch('/api/crop-advice', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(soilData)\n    });\n    const data = await res.json();\n    setRecommendation(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Soil Detection & Crop Advice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"ph\",\n        placeholder: \"Soil pH\",\n        value: soilData.ph,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"nitrogen\",\n        placeholder: \"Nitrogen (N)\",\n        value: soilData.nitrogen,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"phosphorus\",\n        placeholder: \"Phosphorus (P)\",\n        value: soilData.phosphorus,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"potassium\",\n        placeholder: \"Potassium (K)\",\n        value: soilData.potassium,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Advice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), recommendation && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recommended Crops:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recommendation.crops.map(crop => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: crop\n        }, crop, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(SoilHealth, \"7vywmqkjsOxWRYQPMYswuoakskg=\");\n_c = SoilHealth;\nexport default SoilHealth;\nvar _c;\n$RefreshReg$(_c, \"SoilHealth\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SoilHealth","_s","soilData","setSoilData","ph","nitrogen","phosphorus","potassium","recommendation","setRecommendation","handleChange","e","target","name","value","handleSubmit","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","type","crops","map","crop","_c","$RefreshReg$"],"sources":["C:/Users/shres/krishi-suvidha/src/components/SoilHealth.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction SoilHealth() {\r\n  const [soilData, setSoilData] = useState({ ph: '', nitrogen: '', phosphorus: '', potassium: '' });\r\n  const [recommendation, setRecommendation] = useState(null);\r\n\r\n  const handleChange = e => {\r\n    setSoilData({ ...soilData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    // Call backend API to get crop recommendation\r\n    const res = await fetch('/api/crop-advice', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(soilData),\r\n    });\r\n    const data = await res.json();\r\n    setRecommendation(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Soil Detection & Crop Advice</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input name=\"ph\" placeholder=\"Soil pH\" value={soilData.ph} onChange={handleChange} required />\r\n        <input name=\"nitrogen\" placeholder=\"Nitrogen (N)\" value={soilData.nitrogen} onChange={handleChange} required />\r\n        <input name=\"phosphorus\" placeholder=\"Phosphorus (P)\" value={soilData.phosphorus} onChange={handleChange} required />\r\n        <input name=\"potassium\" placeholder=\"Potassium (K)\" value={soilData.potassium} onChange={handleChange} required />\r\n        <button type=\"submit\">Get Advice</button>\r\n      </form>\r\n      {recommendation && (\r\n        <div>\r\n          <h3>Recommended Crops:</h3>\r\n          <ul>\r\n            {recommendation.crops.map(crop => (\r\n              <li key={crop}>{crop}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SoilHealth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}